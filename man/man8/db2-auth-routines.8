.TH db2-auth-routines "8" "April 2012" "db2-auth-routines 1.1" "DB2 UDFs and Stored Procedures"
.SH NAME
db2-auth-routines \- DB2 UDFs and SPs for encrypting passwords
.SH SYNOPSIS
\fBUser Defined Functions:\fR
.PP
>>-MD5--(--expression--)---------------------------------------><
.PP
>>-APR_MD5--(--expression--)-----------------------------------><
.PP
>>-APR_CRYPT--(--expression--)---------------------------------><
.PP
>>-APR_SHA1--(--expression--)----------------------------------><
.PP
>>-VALIDATE_PW--(--password--,--hash--)------------------------><
.PP
\fBStored Procedures:\fR
.PP
>>-MD5--(--expression--,--hash--)------------------------------><
.PP
>>-APR_MD5--(--expression--,--hash--)--------------------------><
.PP
>>-APR_CRYPT--(--expression--,--hash--)------------------------><
.PP
>>-APR_SHA1--(--expression--,--hash--)-------------------------><
.PP
>>-VALIDATE_PW--(--password--,--hash--,--is_valid--)-----------><
.SH DESCRIPTION
These functions and procedures can be used to encrypt passwords within DB2.
.TP
\fBmd5( '\fR\fIcleartext\fR\fB' )\fR 
.RS 0
\fBmd5( '\fR\fIcleartext\fR\fB', \fR\fI:hash\fR\fB )\fR
.PD 0
.IP 
MD5 hash. The md5 routine is compatible to the PHP md5 function.
.PD
.IP
The argument can be a character string that is either a CHAR or VARCHAR not exceeding 120 bytes.
.IP
The result of the routine is CHAR(32). The result can be null; if the argument is null, the result is the null value.
.TP
\fBapr_md5( '\fR\fIcleartext\fR\fB' )\fR
.RS 0
\fBapr_md5( '\fR\fIcleartext\fR\fB', \fR\fI:hash\fR\fB )\fR
.PD 0
.IP 
Seeded MD5 hash. The apr_md5 routine is compatible to the Apache function that is used in the htpasswd utility.
.PD
.IP
The argument can be a character string that is either a CHAR or VARCHAR not exceeding 120 bytes.
.IP
The result of the routine is CHAR(37). The result can be null; if the argument is null, the result is the null value.
.TP
\fBapr_crypt( '\fR\fIcleartext\fR\fB' )\fR
.RS 0
\fBapr_crypt( '\fR\fIcleartext\fR\fB', \fR\fI:hash\fR\fB )\fR
.PD 0
.IP 
Unix crypt. The apr_crypt routine is compatible to the Apache function that is used in the htpasswd utility.
.PD
.IP
The argument can be a character string that is either a CHAR or VARCHAR not exceeding 120 bytes.
.IP
The result of the routine is CHAR(13). The result can be null; if the argument is null, the result is the null value.
.TP
\fBapr_sha1( '\fR\fIcleartext\fR\fB' )\fR
.RS 0
\fBapr_sha1( '\fR\fIcleartext\fR\fB', \fR\fI:hash\fR\fB )\fR
.PD 0
.IP 
SHA1 algorithm. The apr_sha1 routine is compatible to the Apache function that is used in the htpasswd utility.
.PD
.IP
The argument can be a character string that is either a CHAR or VARCHAR not exceeding 120 bytes.
.IP
The result of the routine is CHAR(33). The result can be null; if the argument is null, the result is the null value.
.TP
\fBvalidate_pw( '\fR\fIpassword\fR\fB', '\fR\fIhash\fR\fB' )\fR
.RS 0
\fBvalidate_pw( '\fR\fIpassword\fR\fB', '\fR\fIhash\fR\fB', \fR\fI:is_valid\fR\fB )\fR
.PD 0
.IP 
This routine can be used to validate a password against a hash.
.PD
.IP
The two input arguments can be character strings that are either a CHAR or VARCHAR not exceeding 120 bytes. The second parameter (hash) must not be 
empty, otherwise an SQLSTATE 39701 is returned.
.IP
The result of the routine is an INTEGER. If the password is valid, 1 is returned. If the password is not valid, 0 is returned. The result can be null; if the argument is null, the result is the null value.
.SH EXAMPLES
\fBmd5 (1)\fR
.br
Inserting the user \fItest\fR and the md5 hash of the clear text \fItestpwd\fR to the table \fIusers\fR.
.PP
.nf
INSERT INTO USERS (username, password) 
  VALUES ('test', md5('testpwd'))
.fi
.PP
\fBmd5 (2)\fR
.br
.nf
SELECT md5( 'testpwd' ) FROM SYSIBM.SYSDUMMY1

1
--------------------------------
342df5b036b2f28184536820af6d1caf

  1 record(s) selected.
.fi
.PP
\fBmd5 (3)\fR
.br
.nf
CALL md5('testpwd', ?)

  Value of output parameters
  --------------------------
  Parameter Name  : HASH
  Parameter Value : 342df5b036b2f28184536820af6d1caf

  Return Status = 0
.fi
.PP
\fBapr_md5 (1)\fR
.br
Inserting the user \fItest\fR and the seeded md5 hash of the clear text 
.br
\fItestpwd\fR to the table \fIusers\fR.
.PP
.nf
INSERT INTO USERS (username, password) 
  VALUES ('test', apr_md5('testpwd'))
.fi
.PP
\fBapr_md5 (2)\fR
.br
.nf
SELECT apr_md5('testpwd') FROM SYSIBM.SYSDUMMY1

1                                    
-------------------------------------
$apr1$HsTNH...$bmlPUSoPOF/Qhznl.sAq6/

  1 record(s) selected.
.fi
.PP
\fBapr_md5 (3)\fR
.br
.nf
CALL apr_md5('testpwd', ?)

  Value of output parameters
  --------------------------
  Parameter Name  : HASH
  Parameter Value : $apr1$HsTNH...$bmlPUSoPOF/Qhznl.sAq6/

  Return Status = 0
.fi
.PP
\fBapr_crypt (1)\fR
.br
Inserting the user \fItest\fR and the crypted clear text \fItestpwd\fR to the table \fIusers\fR.
.PP
.nf
INSERT INTO USERS (username, password) 
  VALUES ('test', apr_crypt('testpwd'))
.fi
.PP
\fBapr_crypt (2)\fR
.br
.nf
SELECT apr_crypt('testpwd') FROM SYSIBM.SYSDUMMY1

1            
-------------
cqs7uOvz8KBlk

  1 record(s) selected.
.fi
.PP
\fBapr_crypt (3)\fR
.br
.nf
CALL apr_crypt('testpwd', ?)

  Value of output parameters
  --------------------------
  Parameter Name  : HASH
  Parameter Value : cqs7uOvz8KBlk

  Return Status = 0
.fi
.PP
\fBapr_sha1 (1)\fR
.br
Inserting the user \fItest\fR and the sha1 crypted clear text \fItestpwd\fR to the table \fIusers\fR.
.PP
.nf
INSERT INTO USERS (username, password) 
  VALUES ('test', apr_sha1('testpwd'))
.fi
.PP
\fBapr_sha1 (2)\fR
.br
.nf
SELECT apr_sha1( 'testpwd' ) FROM SYSIBM.SYSDUMMY1

1                                
---------------------------------
{SHA}mO8HWOaqxvmp4Rl1SMgZC3LJWB0=

  1 record(s) selected.
.fi
.PP
\fBapr_sha1 (3)\fR
.br
.nf
CALL apr_sha1('testpwd', ?)

  Value of output parameters
  --------------------------
  Parameter Name  : HASH
  Parameter Value : {SHA}mO8HWOaqxvmp4Rl1SMgZC3LJWB0=

  Return Status = 0
.fi
.PP
\fBvalidate_pw (1)\fR
.br
Validating the password \fItestpwd\fR against the crypt hash \fIcqs7uOvz8KBlk\fR.
.PP
.nf
SELECT validate_pw('testpwd', 'cqs7uOvz8KBlk') FROM SYSIBM.SYSDUMMY1"

1          
-----------
          1

  1 record(s) selected.
.fi
.PP
\fBvalidate_pw (2)\fR
.br
.nf
CALL validate_pw('testpwd', 'cqs7uOvz8KBlk', ?)

  Value of output parameters
  --------------------------
  Parameter Name  : IS_VALID
  Parameter Value : 1

  Return Status = 0
.fi
.PP
\fBvalidate_pw (3)\fR
.br
.nf
CALL validate_pw('testpwd', '0123456789abcdef', ?)

  Value of output parameters
  --------------------------
  Parameter Name  : IS_VALID
  Parameter Value : 0

  Return Status = 0
.fi
.SH AUTHOR
Written by Helmut K. C. Tessarek.
.SH "BUGS"
Hopefully none :-) But if you find one, please report it at:
.br
http://sourceforge.net/tracker/?func=add&group_id=103064&atid=633717
.SH "WEB SITE"
http://mod-auth-ibmdb2.sourceforge.net
